{"ast":null,"code":"var _jsxFileName = \"/Users/charlottefranklin/Projects/unbounded-frontend/src/pentacle-css/src/components/gist.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addStylesheet = href => {\n      if (!this.stylesheetAdded) {\n        this.stylesheetAdded = true;\n        var link = document.createElement('link');\n        link.type = \"text/css\";\n        link.rel = \"stylesheet\";\n        link.href = href;\n        document.head.appendChild(link);\n      }\n    };\n\n    this.gist = props.gist;\n    this.file = props.file;\n    this.stylesheetAdded = false;\n    this.state = {\n      loading: true,\n      src: \"\"\n    };\n  } // The Gist JSON data includes a stylesheet to add to the page\n  // to make it look correct. `addStylesheet` ensures we only add\n  // the stylesheet one time.\n\n\n  componentDidMount() {\n    // Create a JSONP callback that will set our state\n    // with the data that comes back from the Gist site\n    var gistCallback = Gist.nextGistCallback();\n\n    window[gistCallback] = function (gist) {\n      this.setState({\n        loading: false,\n        src: gist.div\n      });\n      this.addStylesheet(gist.stylesheet);\n    }.bind(this);\n\n    var url = \"https://gist.github.com/charlottefranklin/\" + this.props.gist + \".json?callback=\" + gistCallback;\n\n    if (this.props.file) {\n      url += \"&file=\" + this.props.file;\n    } // Add the JSONP script tag to the document.\n\n\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    document.head.appendChild(script);\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"gist-container\",\n        children: \"Loading gist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"gist-container\",\n        dangerouslySetInnerHTML: {\n          __html: this.state.src\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nGist.propTypes = {// gist: React.PropTypes.string.isRequired, // e.g. \"username/id\"\n  // file: React.PropTypes.string // to embed a single specific file from the gist\n}; // Each time we request a Gist, we'll need to generate a new\n// global function name to serve as the JSONP callback.\n\nvar gistCallbackId = 0;\n\nGist.nextGistCallback = () => {\n  return \"embed_gist_callback_\" + gistCallbackId++;\n};\n\nexport default Gist;","map":{"version":3,"sources":["/Users/charlottefranklin/Projects/unbounded-frontend/src/pentacle-css/src/components/gist.js"],"names":["React","Component","Gist","constructor","props","addStylesheet","href","stylesheetAdded","link","document","createElement","type","rel","head","appendChild","gist","file","state","loading","src","componentDidMount","gistCallback","nextGistCallback","window","setState","div","stylesheet","bind","url","script","render","__html","propTypes","gistCallbackId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAEzBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,aAdmB,GAcFC,IAAD,IAAU;AACtB,UAAI,CAAC,KAAKC,eAAV,EAA2B;AACvB,aAAKA,eAAL,GAAuB,IAAvB;AACA,YAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,QAAAA,IAAI,CAACG,IAAL,GAAY,UAAZ;AACAH,QAAAA,IAAI,CAACI,GAAL,GAAW,YAAX;AACAJ,QAAAA,IAAI,CAACF,IAAL,GAAYA,IAAZ;AAEAG,QAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACH;AACJ,KAxBkB;;AAEf,SAAKO,IAAL,GAAYX,KAAK,CAACW,IAAlB;AACA,SAAKC,IAAL,GAAYZ,KAAK,CAACY,IAAlB;AACA,SAAKT,eAAL,GAAuB,KAAvB;AACA,SAAKU,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,GAAG,EAAE;AAFI,KAAb;AAIH,GAXwB,CAazB;AACA;AACA;;;AAaAC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA,QAAIC,YAAY,GAAGnB,IAAI,CAACoB,gBAAL,EAAnB;;AACAC,IAAAA,MAAM,CAACF,YAAD,CAAN,GAAuB,UAASN,IAAT,EAAe;AAClC,WAAKS,QAAL,CAAc;AACVN,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,GAAG,EAAEJ,IAAI,CAACU;AAFA,OAAd;AAIA,WAAKpB,aAAL,CAAmBU,IAAI,CAACW,UAAxB;AACH,KANsB,CAMrBC,IANqB,CAMhB,IANgB,CAAvB;;AAQA,QAAIC,GAAG,GAAG,+CAA+C,KAAKxB,KAAL,CAAWW,IAA1D,GAAiE,iBAAjE,GAAqFM,YAA/F;;AACA,QAAI,KAAKjB,KAAL,CAAWY,IAAf,EAAqB;AACjBY,MAAAA,GAAG,IAAI,WAAW,KAAKxB,KAAL,CAAWY,IAA7B;AACH,KAfe,CAiBhB;;;AACA,QAAIa,MAAM,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAmB,IAAAA,MAAM,CAAClB,IAAP,GAAc,iBAAd;AACAkB,IAAAA,MAAM,CAACV,GAAP,GAAaS,GAAb;AACAnB,IAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0Be,MAA1B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKb,KAAL,CAAWC,OAAf,EAAwB;AACpB,0BAAO;AAAS,QAAA,SAAS,EAAE,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,0BAAO;AAAS,QAAA,SAAS,EAAE,gBAApB;AAAsC,QAAA,uBAAuB,EAAE;AAACa,UAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWE;AAApB;AAA/D;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AA1DwB;;AA6D7BjB,IAAI,CAAC8B,SAAL,GAAiB,CACb;AACA;AAFa,CAAjB,C,CAKA;AACA;;AACA,IAAIC,cAAc,GAAG,CAArB;;AACA/B,IAAI,CAACoB,gBAAL,GAAwB,MAAM;AAC1B,SAAO,yBAAyBW,cAAc,EAA9C;AACH,CAFD;;AAIA,eAAe/B,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Gist extends Component {\n\n    constructor(props) {\n        super(props);\n        this.gist = props.gist;\n        this.file = props.file;\n        this.stylesheetAdded = false;\n        this.state = {\n            loading: true,\n            src: \"\"\n        };\n    }\n\n    // The Gist JSON data includes a stylesheet to add to the page\n    // to make it look correct. `addStylesheet` ensures we only add\n    // the stylesheet one time.\n    addStylesheet = (href) => {\n        if (!this.stylesheetAdded) {\n            this.stylesheetAdded = true;\n            var link = document.createElement('link');\n            link.type = \"text/css\";\n            link.rel = \"stylesheet\";\n            link.href = href;\n\n            document.head.appendChild(link);\n        }\n    }\n\n    componentDidMount() {\n        // Create a JSONP callback that will set our state\n        // with the data that comes back from the Gist site\n        var gistCallback = Gist.nextGistCallback();\n        window[gistCallback] = function(gist) {\n            this.setState({\n                loading: false,\n                src: gist.div\n            });\n            this.addStylesheet(gist.stylesheet);\n        }.bind(this);\n\n        var url = \"https://gist.github.com/charlottefranklin/\" + this.props.gist + \".json?callback=\" + gistCallback;\n        if (this.props.file) {\n            url += \"&file=\" + this.props.file;\n        }\n\n        // Add the JSONP script tag to the document.\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = url;\n        document.head.appendChild(script);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <article className={\"gist-container\"}>Loading gist</article>;\n        } else {\n            return <article className={\"gist-container\"} dangerouslySetInnerHTML={{__html: this.state.src}} />;\n        }\n    }\n}\n\nGist.propTypes = {\n    // gist: React.PropTypes.string.isRequired, // e.g. \"username/id\"\n    // file: React.PropTypes.string // to embed a single specific file from the gist\n};\n\n// Each time we request a Gist, we'll need to generate a new\n// global function name to serve as the JSONP callback.\nvar gistCallbackId = 0;\nGist.nextGistCallback = () => {\n    return \"embed_gist_callback_\" + gistCallbackId++;\n};\n\nexport default Gist;\n"]},"metadata":{},"sourceType":"module"}